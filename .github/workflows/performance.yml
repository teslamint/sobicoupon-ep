name: Performance Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # 매일 오전 2시에 실행 (KST 기준 오전 11시)
    - cron: '0 2 * * *'

env:
  NODE_VERSION: '20'

jobs:
  lighthouse:
    name: Lighthouse Performance Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build project
        run: pnpm run build
        env:
          CI: true
          KAKAO_API_KEY: ${{ secrets.KAKAO_API_KEY || 'dummy_key_for_ci' }}

      - name: Install http-server
        run: pnpm add -g http-server

      - name: Start static server
        run: |
          cd dist/public
          http-server -p 8787 -c-1 --cors &
          sleep 15
          echo "서버 상태 확인:"
          curl -f http://localhost:8787/ || exit 1
          echo "페이지 내용 확인:"
          curl -s http://localhost:8787/ | head -10
        env:
          CI: true
          KAKAO_API_KEY: ${{ secrets.KAKAO_API_KEY || 'dummy_key_for_ci' }}

      - name: Run Lighthouse audit
        uses: treosh/lighthouse-ci-action@v12
        with:
          configPath: '.github/lighthouse/lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true

  load-testing:
    name: Load Testing
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build project
        run: pnpm run build
        env:
          CI: true
          KAKAO_API_KEY: ${{ secrets.KAKAO_API_KEY || 'dummy_key_for_ci' }}

      - name: Install http-server and Artillery
        run: |
          pnpm add -g http-server
          pnpm add -g artillery

      - name: Start static server
        run: |
          cd dist/public
          http-server -p 8787 -c-1 --cors &
          sleep 15
          echo "서버 상태 확인:"
          curl -f http://localhost:8787/ || exit 1
        env:
          CI: true
          KAKAO_API_KEY: ${{ secrets.KAKAO_API_KEY || 'dummy_key_for_ci' }}

      - name: Run load tests
        run: |
          cat > load-test.yml << EOF
          config:
            target: 'http://localhost:8787'
            phases:
              - duration: 30
                arrivalRate: 5
                name: "Warm up"
              - duration: 60
                arrivalRate: 10
                name: "Sustained load"
              - duration: 30
                arrivalRate: 20
                name: "Peak load"
          scenarios:
            - name: "Basic page load"
              weight: 70
              flow:
                - get:
                    url: "/"
                - think: 2
                - get:
                    url: "/styles.css"
            - name: "API simulation"
              weight: 30
              flow:
                - get:
                    url: "/"
                - think: 5
          EOF
          
          artillery run load-test.yml --output report.json
          artillery report report.json --output report.html

      - name: Upload load test results
        uses: actions/upload-artifact@v4
        with:
          name: load-test-report
          path: |
            report.json
            report.html
          retention-days: 7

  bundle-size:
    name: Bundle Size Analysis
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build project
        run: pnpm run build
        env:
          CI: true
          KAKAO_API_KEY: ${{ secrets.KAKAO_API_KEY || 'dummy_key_for_ci' }}

      - name: Analyze bundle size
        run: |
          echo "## 📦 Bundle Size Analysis" > bundle-analysis.md
          echo "" >> bundle-analysis.md
          
          if [ -d "dist" ]; then
            echo "### Build Output" >> bundle-analysis.md
            du -sh dist/* | while read size file; do
              echo "- **$(basename $file)**: $size" >> bundle-analysis.md
            done
            echo "" >> bundle-analysis.md
            
            total_size=$(du -sh dist | cut -f1)
            echo "**Total Bundle Size**: $total_size" >> bundle-analysis.md
          fi
          
          echo "" >> bundle-analysis.md
          echo "### Asset Details" >> bundle-analysis.md
          find dist -type f -name "*.js" -o -name "*.css" -o -name "*.html" | while read file; do
            size=$(du -h "$file" | cut -f1)
            echo "- $(basename "$file"): $size" >> bundle-analysis.md
          done

      - name: Comment bundle analysis
        if: github.event_name == 'pull_request' && github.event.pull_request
        uses: actions/github-script@v7
        continue-on-error: true
        with:
          script: |
            const fs = require('fs');
            if (fs.existsSync('bundle-analysis.md')) {
              const analysis = fs.readFileSync('bundle-analysis.md', 'utf8');
              console.log('Bundle analysis results:');
              console.log(analysis);
              
              // PR 댓글 작성 시도 (실패해도 워크플로는 계속 진행)
              try {
                if (github.event.pull_request && github.event.pull_request.number) {
                  await github.rest.issues.createComment({
                    issue_number: github.event.pull_request.number,
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    body: analysis
                  });
                  console.log('Bundle analysis 댓글 작성 성공');
                } else {
                  console.log('PR 컨텍스트가 없어 댓글 작성을 건너뜁니다.');
                }
              } catch (commentError) {
                console.log('Bundle analysis 댓글 작성 실패 (권한 문제일 수 있음):', commentError.message);
                // 댓글 작성 실패는 무시하고 계속 진행
              }
            }

      - name: Upload bundle analysis
        uses: actions/upload-artifact@v4
        with:
          name: bundle-analysis
          path: bundle-analysis.md
          retention-days: 7